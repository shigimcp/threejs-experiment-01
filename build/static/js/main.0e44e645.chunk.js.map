{"version":3,"sources":["serviceWorker.js","components/Hed.jsx","components/Logo.jsx","components/SingleCube.jsx","components/Cubes.jsx","components/Scene.jsx","components/Lights.jsx","components/Camera.jsx","Home.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Text","children","vAlign","hAlign","size","props","color","font","useLoader","THREE","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","meshRef","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","scale","ref","castShadow","attach","args","Hed","hedRef","useRef","LogoShape","paths","SVGLoader","url","shapes","flatMap","thisPath","i","toShapes","map","shape","fillColor","fillOpacity","extrudeDir","nodeID","userData","node","id","useState","center","setCenter","logoGroupRef","useEffect","box","Box3","setFromObject","current","sphere","Sphere","getBoundingSphere","useFrame","rotation","LogoMesh","key","uuid","console","log","extrudeSettings","steps","depth","meshScaleFactor","logoMeshRef","innerWidth","receiveShadow","side","DoubleSide","depthWrite","transparent","opacity","metalness","Logo","Cube","timeRef","isHovered","setIsHovered","isActive","setIsActive","isActiveRef","random","timeModMemo","Math","sin","onHover","useCallback","e","value","stopPropagation","onClick","v","onPointerOver","onPointerOut","roughness","Cubes","cubeGroup","nodesCubes","Array","el","Scene","GroundPlane","BackDrop","Lights","KeyLight","brightness","width","intensity","lookAt","penumbra","FillLight","RimLight","ShadowLight","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Camera01","cameraRef","setDefaultCamera","useThree","Camera","fov","Home","shadowMap","fallback","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0e44e645.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//#region ==================== IMPORTS ====================\n\nimport React, { useRef, useMemo } from 'react';\n\nimport * as THREE from 'three';\nimport { useLoader, useUpdate } from 'react-three-fiber';\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== FUNCTION: Text - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\nfunction Text({ children, vAlign = 'center', hAlign = 'center', size = 1, color = '#0000ff', ...props }) {\n\n    const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/fonts/ChaleParNinSix.json')\n\n    const config = useMemo(\n        () => ({ font, size: 1, height: 0.125, curveSegments: 10, bevelEnabled: true, bevelThickness: 0, bevelSize: 0, bevelOffset: 0, bevelSegments: 0 }),\n        [font]\n    )\n\n    const meshRef = useUpdate(\n\n        self => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\n            self.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\n        },\n\n        [children]\n    )\n\n\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={meshRef} castShadow>\n                <textGeometry attach=\"geometry\" args={[children, config]} />\n                <meshPhongMaterial attach=\"material\" color=\"#0000ff\" />\n            </mesh>\n        </group>\n    )\n}\n\n//#endregion ==================== FUNCTION: Text - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\n\nexport default function Hed() {\n\n    const hedRef = useRef()\n\n    return (\n        <group ref={hedRef}>\n            <Text hAlign=\"left\" position={[0.7625, 1.5, -4]} children=\"Shigeru McPherson\" size={5} />\n            <Text hAlign=\"left\" position={[0, 0.8125, -4]} children=\"digital designer • art director\" size={3} />\n        </group>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useRef, useMemo } from 'react';\n\nimport { DoubleSide } from \"three\";\nimport { Box3, Sphere } from \"three\";\n\nimport { useLoader } from 'react-three-fiber';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { useFrame } from 'react-three-fiber';\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\nfunction LogoShape(props) {\n\n    //#region -------------------- LOGOSHAPE shapes --------------------\n\n\n    const { paths } = useLoader(SVGLoader, props.url)\n\n    const shapes = useMemo(() =>\n        paths.flatMap((thisPath, i) =>\n            thisPath.toShapes(true).map((shape) =>\n                ({ shape, color: props.fillColor, fillOpacity: props.fillOpacity, extrudeDir: props.extrudeDir, nodeID: thisPath.userData.node.id })\n            )\n            // ), []\n        ), [paths, props]\n    )\n\n    //#endregion -------------------- LOGOSHAPE shapes --------------------\n\n\n    //#region -------------------- LOGOSHAPE center --------------------\n\n    const [center, setCenter] = useState([0, 0, 0])\n\n    const logoGroupRef = useRef()\n\n    useEffect(() => {\n\n        const box = new Box3().setFromObject(logoGroupRef.current)\n        const sphere = new Sphere()\n\n        box.getBoundingSphere(sphere)\n\n        setCenter([0, -sphere.center.y, 0])\n\n    }, [])\n\n    //#endregion -------------------- LOGOSHAPE center --------------------\n\n\n    //#region -------------------- LOGOSHAPE spin --------------------\n\n    useFrame(() => {\n        logoGroupRef.current.rotation.y += 0.025;\n    });\n\n    //#endregion -------------------- LOGOSHAPE spin --------------------\n\n\n    return (\n        <group position={center} ref={logoGroupRef}>\n            {shapes.map((props) => (\n                <LogoMesh key={props.shape.uuid} {...props} />\n            ))}\n        </group>\n    )\n}\n\n//#endregion ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\n\n\n//#region ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\nfunction LogoMesh(props) {\n\n    console.log('==================== LOGOMESH ====================');\n    console.log(props);\n\n    //#region -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n    let extrudeSettings = {\n        curveSegments: 7, \n        steps: 2, \n        depth: 25, \n        bevelEnabled: false, \n    };\n\n    if (props.extrudeDir === 'negative') {\n        extrudeSettings.depth = extrudeSettings.depth * -1;\n    }\n\n    //#endregion -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n\n    //#region -------------------- LOGOMESH center --------------------\n\n    const logoMeshRef = useRef()\n    const [center, setCenter] = useState([0, 0, 0])\n\n\n    useEffect(() => {\n\n        const box = new Box3().setFromObject(logoMeshRef.current)\n        const sphere = new Sphere()\n        box.getBoundingSphere(sphere)\n\n\n        //#region - - - - - - - - - - - LOGOMESH center: via props.nodeID (see LogoShape below) - - - - - - - - - - -\n\n        switch (props.nodeID) {\n\n            case 'kanji_ko01ID':\n\n                setCenter([-sphere.center.x * 0.809716599190283, 0, 0])\n\n                break;\n\n            case 'kanji_ko02ID':\n\n                setCenter([-sphere.center.x * 0.798522414124903, 0, 0])\n\n                break;\n\n            default:\n\n                setCenter([-sphere.center.x, 0, 0])\n\n                break;\n        }\n\n        //#endregion - - - - - - - - - - - LOGOMESH center: via props.nodeID (see LogoShape below) - - - - - - - - - - -\n\n    }, [props.nodeID])\n\n    //#endregion -------------------- LOGOMESH center --------------------\n\n    \n    let meshScaleFactor;\n    const meshColor = \"#000022\";\n\n\n    //#region -------------------- LOGOMESH responsive --------------------\n\n    switch (true) {\n\n        case (window.innerWidth >= 1441):\n            meshScaleFactor = 0.005;\n\n            break;\n\n        case (window.innerWidth >= 992 && window.innerWidth <= 1440):\n            meshScaleFactor = 0.005;\n\n            break;\n\n        case (window.innerWidth >= 768 && window.innerWidth <= 991):\n            meshScaleFactor = 0.005;\n\n            break;\n\n        case (window.innerWidth >= 375 && window.innerWidth <= 767):\n            meshScaleFactor = 0.00225;\n\n            break;\n\n        default:\n            meshScaleFactor = 0.005;\n\n            break;\n    }\n\n    //#endregion -------------------- LOGOMESH responsive --------------------\n\n\n    return (\n        <mesh id={props.id} scale={[meshScaleFactor, -meshScaleFactor, meshScaleFactor]} position={center} castShadow receiveShadow ref={logoMeshRef}>\n            <meshStandardMaterial attach=\"material\" color={meshColor} side={DoubleSide} depthWrite={true} transparent opacity={props.fillOpacity} metalness=\"0.4\" />\n            <extrudeBufferGeometry attach=\"geometry\" args={[[props.shape], extrudeSettings]} />\n        </mesh>\n    )\n}\n\n//#endregion ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\n\n\nexport default function Logo() {\n    return (\n        <group>\n            <LogoShape url=\"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/logo/shigeru_logo_extrude_clean.svg\" fillOpacity=\"0.25\" extrudeDir=\"positive\" />\n            <LogoShape url=\"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/logo/shigeru_logo_extrude_clean.svg\" fillOpacity=\"0.25\" extrudeDir=\"negative\" />\n        </group>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React, { useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\nimport { DoubleSide } from \"three\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n// export default () => {\nexport default function Cube() {\n\n    const meshRef = useRef();\n    const timeRef = useRef(0);\n\n    const [isHovered, setIsHovered] = useState(false);\n    const [isActive, setIsActive] = useState(false);\n\n    const isActiveRef = useRef(isActive);\n\n\n    //#region ==================== REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n    //        ==================== REF: https://codesandbox.io/s/alligatordemoreact-three-fiber-forked-ic94p ====================\n\n    // -------------------- position --------------------\n\n    const orbitRadius = 3;\n\n    const position = useMemo(() => {\n        return [random(-orbitRadius, orbitRadius, true), 0, random(-orbitRadius, orbitRadius, true)];\n    }, []);\n\n\n    // -------------------- random time mod factor --------------------\n\n    const timeModMemo = useMemo(() => random(0.1, 4, true), []);\n\n\n    // -------------------- hover color --------------------\n\n    const color = isHovered ? 0x666666 : (isActive ? 0x000000 : 0xdddddd);\n\n\n    // -------------------- useEffect of the activeState --------------------\n\n    useEffect(() => {\n        isActiveRef.current = isActive;\n    }, [isActive]);\n\n\n    // -------------------- raf loop --------------------\n\n    useFrame(() => {\n        meshRef.current.rotation.y += 0.01 * timeModMemo;\n\n        if (isActiveRef.current) {\n            timeRef.current += 0.03;\n            meshRef.current.position.y = position[1] + Math.sin(timeRef.current) * 0.4;\n        }\n    });\n\n\n    // -------------------- Events --------------------\n\n    const onHover = useCallback(\n        (e, value) => {\n            e.stopPropagation();\n            setIsHovered(value);\n        },\n        [setIsHovered]\n    );\n\n    const onClick = useCallback(\n        e => {\n            e.stopPropagation();\n            setIsActive(v => !v);\n        },\n        [setIsActive]\n    );\n\n    //#endregion ==================== REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n\n    const cubeDims = [0.005, 0.75, 0.75];\n\n    return (\n        <mesh ref={meshRef} position={position} onClick={e => onClick(e)} onPointerOver={e => onHover(e, true)} onPointerOut={e => onHover(e, false)} castShadow receiveShadow>\n            <boxBufferGeometry attach=\"geometry\" args={cubeDims} />\n            <meshStandardMaterial attach=\"material\" color={color} roughness={0.6} side={DoubleSide} metalness={0.4} />\n        </mesh>\n    );\n};\n","//#region ==================== IMPORTS ====================\n\nimport React, { useRef } from \"react\";\nimport { map } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\n\nimport Cube from \"./SingleCube\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CUBES - REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n\nexport default function Cubes(props) {\n    const cubeGroup = useRef();\n\n    useFrame(() => {\n        cubeGroup.current.rotation.y += 0.005;\n    });\n\n    const nodesCubes = map(new Array(5), (el, i) => {\n        return <Cube key={i} />;\n    });\n\n\n    return (\n        <group ref={cubeGroup}>\n            {nodesCubes}\n        </group>\n    )\n}\n\n//#endregion ==================== CUBES - REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n","//#region ==================== IMPORTS ====================\n\n//#region -------------------- HED: PLAIN TEXT GEOMTRY - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef --------------------\n\nimport React from 'react';\n\nimport { DoubleSide } from \"three\";\n\nimport Hed from \"./Hed\";\nimport Logo from \"./Logo\";\nimport Cubes from \"./Cubes\";\n\n//#endregion -------------------- HED: PLAIN TEXT GEOMTRY - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef --------------------\n\n//#endregion ==================== IMPORTS ====================\n\n\n// export default () => {\nexport default function Scene() {\n\n    //#region ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    //#region -------------------- GROUNDPLANE --------------------\n\n    function GroundPlane() {\n        return (\n            <mesh rotation={[5, 0, 0]} position={[0, -5, 0]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} />\n            </mesh>\n        );\n    }\n\n    //#endregion -------------------- GROUNDPLANE --------------------\n\n\n    //#region -------------------- BACKDROP --------------------\n\n    function BackDrop() {\n\n        return (\n            <mesh position={[0, -1, -5]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} />\n            </mesh>\n        );\n    }\n\n    //#endregion -------------------- BACKDROP --------------------\n\n    //#endregion ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n    return (\n        <group>\n            <Hed />\n            <Logo />\n            <Cubes />\n            <BackDrop />\n            <GroundPlane />\n        </group>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n// export default () => {\nexport default function Lights(props) {\n\n    //#region ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    //#region -------------------- LIGHTS: KeyLight --------------------\n\n    function KeyLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                color={color}\n                intensity={brightness}\n                position={[-2, 0, 5]}\n                lookAt={[0, 0, 0]}\n                penumbra={1}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: KeyLight --------------------\n\n\n    //#region -------------------- LIGHTS: FillLight --------------------\n\n    function FillLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                intensity={brightness}\n                color={color}\n                position={[2, 1, 4]}\n                lookAt={[0, 0, 0]}\n                penumbra={2}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: FillLight --------------------\n\n\n    //#region -------------------- LIGHTS: RimLight --------------------\n\n    function RimLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={2}\n                height={2}\n                intensity={brightness}\n                color={color}\n                position={[1, 4, -2]}\n                rotation={[0, 180, 0]}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: RimLight --------------------\n\n\n    //#region -------------------- LIGHTS: ShadowLight --------------------\n\n    function ShadowLight() {\n        return (\n            <directionalLight\n                castShadow\n                position={[2.5, 0, 5]}\n                intensity={0.05}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                shadow-camera-near={0.1}\n                shadow-camera-far={50}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: ShadowLight --------------------\n\n    //#endregion ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n    return (\n        <group>\n            <KeyLight brightness={10} color=\"#ccccff\" />\n            <FillLight brightness={10} color=\"#ffffff\" />\n            <RimLight brightness={10} color=\"#eeeeff\" />\n            <ShadowLight />\n        </group>\n    );\n};\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\nimport { useRef, useEffect } from \"react\";\n\nimport { useThree } from \"react-three-fiber\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CAMERA - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n\nfunction Camera01(props) {\n\n    const cameraRef = useRef();\n    const { setDefaultCamera } = useThree();\n\n    useEffect(() => void setDefaultCamera(\n        cameraRef.current\n    ), [setDefaultCamera]);\n\n\n    return (\n        <perspectiveCamera ref={cameraRef} {...props} />\n    )\n}\n\nexport default function Camera() {\n\n    return (\n        <Camera01 position={[0, 0, 7.5]} fov={40} />\n    )\n}\n\n//#endregion ==================== CAMERA - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n","import React from \"react\";\nimport { Suspense } from 'react';\n\nimport { Canvas } from \"react-three-fiber\";\nimport Scene from \"./components/Scene\";\nimport Lights from \"./components/Lights\";\nimport Camera from \"./components/Camera\"\n\nimport * as THREE from 'three'\n\nexport default function Home() {\n\n    return (\n        <Canvas shadowMap>\n            <Suspense fallback={null}>\n                <Lights />\n                <Camera />\n                <Scene />\n            </Suspense>\n        </Canvas>\n    )\n}\n","import React from 'react';\n\nimport Home from './Home';\n\nfunction App() {\n    return (\n        <Home />\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n// import Home from './Home';\n\nimport './styles.css'\n\n\nReactDOM.render(\n\n    <React.StrictMode>\n        <App />,\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}