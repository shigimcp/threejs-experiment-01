{"version":3,"sources":["serviceWorker.js","components/Hed.jsx","components/Logo.jsx","components/Scene.jsx","components/Lights.jsx","components/Camera.jsx","Home.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Text","children","vAlign","hAlign","size","props","color","font","useLoader","THREE","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","meshRef","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","scale","ref","castShadow","attach","args","Hed","hedRef","useRef","LogoMesh","logoMesh_Ref","useState","center","setCenter","extrudeSettings","steps","depth","extrudeDir","useEffect","bBox","Box3","setFromObject","current","bSphere","Sphere","getBoundingSphere","nodeID","z","meshScaleFactor","id","receiveShadow","wireframe","depthWrite","transparent","opacity","fillOpacity","shape","LogoShape","paths","SVGLoader","url","shapes","flatMap","thisPath","i","toShapes","map","fillColor","userData","node","logoGroup_Ref","useFrame","rotation","uuid","Logo","remoteGitImageLoc","Scene","GroundPlane","side","DoubleSide","metalness","BackDrop","Lights","KeyLight","brightness","width","intensity","lookAt","penumbra","FillLight","RimLight","ShadowLight","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Camera","cameraRef","setDefaultCamera","useThree","getWidth","innerWidth","document","documentElement","clientWidth","body","Home","scene","canvas_Ref","windowWidth","setWindowWidth","console","log","timeoutId","resizeListener","thisObject","clearTimeout","setTimeout","addEventListener","removeEventListener","shadowMap","fallback","fov","App","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3abd122.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//#region ==================== IMPORTS ====================\n\nimport React, { useRef, useMemo } from 'react';\n\nimport * as THREE from 'three';\nimport { useLoader, useUpdate } from 'react-three-fiber';\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== FUNCTION: Text - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\nfunction Text({ children, vAlign = 'center', hAlign = 'center', size = 1, color = '#0000ff', ...props }) {\n\n    const font = useLoader(THREE.FontLoader, 'https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/fonts/ChaleParNinSix.json')\n\n    const config = useMemo(\n        () => ({ font, size: 1, height: 0.125, curveSegments: 10, bevelEnabled: true, bevelThickness: 0, bevelSize: 0, bevelOffset: 0, bevelSegments: 0 }),\n        [font]\n    )\n\n    const meshRef = useUpdate(\n\n        self => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\n            self.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\n        },\n\n        [children]\n    )\n\n\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={meshRef} castShadow>\n                <textGeometry attach=\"geometry\" args={[children, config]} />\n                <meshStandardMaterial attach=\"material\" color=\"#000066\" />\n                {/* <meshPhongMaterial attach=\"material\" color=\"#0000ff\" /> */}\n            </mesh>\n        </group>\n    )\n}\n\n//#endregion ==================== FUNCTION: Text - REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\n\nexport default function Hed() {\n\n    const hedRef = useRef()\n\n    return (\n        <group ref={hedRef}>\n            <Text hAlign=\"left\" position={[0.7625, 1.5, -4]} children=\"Shigeru McPherson\" size={5} />\n            <Text hAlign=\"left\" position={[0, 0.8125, -4]} children=\"digital designer • art director\" size={3} />\n        </group>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useRef, useMemo } from 'react';\n\n// import { DoubleSide } from \"three\";\nimport { Box3, Sphere } from \"three\";\n\nimport { useLoader } from 'react-three-fiber';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { useFrame } from 'react-three-fiber';\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CONSTANTS ====================\n\nconst remoteGitImageLoc = 'https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/';\n// const localLoc = '../images/';\n\n// const getWidth = () => window.innerWidth\n//     || document.documentElement.clientWidth\n//     || document.body.clientWidth;\n\n//#endregion ==================== CONSTANTS ====================\n\n\n\n//#region ==================== FUNCTIONS ====================\n\n// function centerObject(thisObject) {\n//     console.log('');\n//     console.log('==================== FUNCTION: centerObject(thisObject) ====================');\n//     console.log('thisObject = ');\n//     console.log(thisObject);\n\n// }\n\n//#endregion ==================== FUNCTIONS ====================\n\n\n\n//#region ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\nfunction LogoMesh(props) {\n\n    // console.log('');\n    // console.log('==================== LOGOMESH: EXTRUDE ====================');\n    // console.log(props);\n    // console.log('props.shape = ' + props.shape);\n    // console.log('props.extrudeDir = ' + props.extrudeDir);\n\n\n    //#region -------------------- ASSETS _Ref --------------------\n\n    const logoMesh_Ref = useRef();\n\n    // const logoGroup_Ref = useRef(null);\n\n    // const logoShapePOS_Ref = useRef(null);\n    // const logoShapeNEG_Ref = useRef(null);\n\n    //#endregion -------------------- ASSETS _Ref --------------------\n\n\n    //#region -------------------- useState DEFs --------------------\n\n    // let [windowWidth, setWindowWidth] = useState(getWidth());\n\n    // const [center, setCenter] = useState([0, 0, 0]);\n    let [center, setCenter] = useState([0, 0, 0]);\n\n    //#endregion -------------------- useState DEFs --------------------\n\n\n    //#region -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n    let extrudeSettings = {\n        // curveSegments: 7,\n        // steps: 2,\n        // depth: 5, \n        // // depth: 2.5,\n        // bevelEnabled: false,\n\n        curveSegments: 7,\n        steps: 1,\n        depth: 5,\n        // depth: 2.5,\n        bevelEnabled: false,\n\n        // curveSegments: 7,\n        // steps: 2,\n        // depth: 25,\n        // bevelEnabled: true, \n        // bevelThickness: 5,\n        // bevelSize: 5,\n        // bevelOffset: 0,\n        // bevelSegments: 5, \n    };\n\n\n    // console.log('extrudeSettings.depth = ' + extrudeSettings.depth);\n\n\n    if (props.extrudeDir === 'negative') {\n        extrudeSettings.depth = extrudeSettings.depth * -1;\n    };\n\n\n    // console.log('extrudeSettings.depth = ' + extrudeSettings.depth);\n\n    //#endregion -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n\n    //#region -------------------- LOGOMESH center --------------------\n\n    useEffect(() => {\n    // useMemo(() => {\n\n        const bBox = new Box3().setFromObject(logoMesh_Ref.current);\n        const bSphere = new Sphere();\n\n        bBox.setFromObject(logoMesh_Ref.current);\n        bBox.getBoundingSphere(bSphere);\n\n\n        //#region -------------------- LOGOMESH center: switch props.nodeID (see LogoShape below) --------------------\n\n        switch (props.nodeID) {\n\n            // case 'afro':\n\n            //#region - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'afro' - - - - - - - - - - -\n\n            // console.log('');\n            // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n            // console.log(logoMesh_Ref.current.material.color);\n            // console.log(logoMesh_Ref.current);\n            // console.log('props.nodeID = ' + props.nodeID);\n\n            // // setCenter([-bSphere.center.x, 0, 0]);\n            // setCenter([-bSphere.center.x, 0, -bSphere.center.z]);\n\n            // console.log('center = ' + center);\n\n            // break;\n\n            //#endregion - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'afro' - - - - - - - - - - -\n\n\n            // case 'glassesID':\n\n            //#region - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'glassesID' - - - - - - - - - - -\n\n            // console.log('');\n            // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n            // console.log(logoMesh_Ref.current.material.color);\n            // console.log(logoMesh_Ref.current);\n            // console.log('props.nodeID = ' + props.nodeID);\n\n            // // setCenter([-bSphere.center.x, 0, 0]);\n            // setCenter([-bSphere.center.x, 0, -bSphere.center.z]);\n\n            // console.log('center = ' + center);\n\n            // break;\n\n            //#endregion - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'glassesID' - - - - - - - - - - -\n\n\n            case 'kanji_ko01ID':\n\n                //#region - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'kanji_ko01ID' - - - - - - - - - - -\n\n                // console.log('');\n                // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n                // console.log(logoMesh_Ref.current.material.color);\n                // console.log(logoMesh_Ref.current);\n                // console.log('props.nodeID = ' + props.nodeID);\n\n                // setCenter([-bSphere.center.x * 0.809716599190283, 0, 0]);\n                // setCenter([-bSphere.center.x * 0.809716599190283, 0, -0.5]);\n                setCenter([-bSphere.center.x * 0.809716599190283, 0, -bSphere.center.z]);\n\n                // console.log('center = ' + center);\n\n                break;\n\n                //#endregion - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'kanji_ko01ID' - - - - - - - - - - -\n\n\n            case 'kanji_ko02ID':\n\n                //#region - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'kanji_ko02ID' - - - - - - - - - - -\n\n                // console.log('');\n                // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n                // console.log(logoMesh_Ref.current.material.color);\n                // console.log(logoMesh_Ref.current);\n                // console.log('props.nodeID = ' + props.nodeID);\n\n                // setCenter([-bSphere.center.x * 0.798522414124903, 0, 0]);\n                // setCenter([-bSphere.center.x * 0.798522414124903, 0, -0.5]);\n                setCenter([-bSphere.center.x * 0.798522414124903, 0, -bSphere.center.z]);\n\n                // console.log('center = ' + center);\n\n                break;\n\n                //#endregion - - - - - - - - - - - LOGOMESH center: case props.nodeID = 'kanji_ko02ID' - - - - - - - - - - -\n\n\n            default:\n\n                //#region - - - - - - - - - - - LOGOMESH center: case = default - - - - - - - - - - -\n\n                // console.log('');\n                // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n                // console.log(logoMesh_Ref.current.material.color);\n                // console.log(logoMesh_Ref.current);\n                // console.log('props.nodeID = ' + props.nodeID);\n\n                // setCenter([-bSphere.center.x, 0, 0]);\n                // setCenter([-bSphere.center.x, 0, -0.5]);\n                setCenter([-bSphere.center.x, 0, -bSphere.center.z]);\n\n                // console.log('center = ' + center);\n\n                break;\n\n                //#endregion - - - - - - - - - - - LOGOMESH center: case = default - - - - - - - - - - -\n        }\n\n        //#endregion -------------------- LOGOMESH center: switch props.nodeID (see LogoShape below) --------------------\n\n\n        //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n        // let timeoutId = null;\n\n        // const resizeListener = () => {\n\n        //     // console.log('useEffect: WINDOW RESIZE - resizeListener triggered!');\n\n        //     // prevent execution of previous setTimeout\n        //     clearTimeout(timeoutId);\n\n        //     timeoutId = setTimeout(() => setWindowWidth(getWidth()), 150);\n\n        //     // centerObject: RE-CENTER OBJECT\n        //     // centerObject();\n\n        //     centerObject(scene_Ref.current.children[0]);\n        //     // centerObject(scene_Ref.current.children[1]);\n        // };\n\n        // window.addEventListener('resize', resizeListener);\n\n        // return () => {\n        //     window.removeEventListener('resize', resizeListener);\n        // }\n\n        //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    }, [props.nodeID]);\n\n    //#endregion -------------------- LOGOMESH center --------------------\n\n\n    //#region -------------------- LOGOMESH responsive --------------------\n\n    // let meshScaleFactor = 0.005;\n    // const meshColor = \"#000022\";\n\n    // switch (true) {\n\n    //     case (window.innerWidth >= 1441):\n\n    //         // console.log('');\n    //         // console.log('-------------------- LOGOMESH responsive: window.innerWidth >= 1441 px --------------------');\n    //         // // console.log('window.innerWidth = ' + window.innerWidth);\n    //         // console.log('windowWidth = ' + windowWidth);\n\n    //         meshScaleFactor = 0.0375;\n\n    //         break;\n\n    //     case (window.innerWidth >= 992 && window.innerWidth <= 1440):\n\n    //         // console.log('');\n    //         // console.log('-------------------- LOGOMESH responsive: window.innerWidth  992 px - 1440 px --------------------');\n    //         // // console.log('window.innerWidth = ' + window.innerWidth);\n    //         // console.log('windowWidth = ' + windowWidth);\n\n    //         meshScaleFactor = 0.05;\n\n    //         break;\n\n    //     case (window.innerWidth >= 768 && window.innerWidth <= 991):\n\n    //         // console.log('');\n    //         // console.log('-------------------- LOGOMESH responsive: window.innerWidth  768 px - 991 px --------------------');\n    //         // // console.log('window.innerWidth = ' + window.innerWidth);\n    //         // console.log('windowWidth = ' + windowWidth);\n\n    //         meshScaleFactor = 0.05;\n\n    //         break;\n\n    //     case (window.innerWidth >= 375 && window.innerWidth <= 767):\n\n    //         // console.log('');\n    //         // console.log('-------------------- LOGOMESH responsive: window.innerWidth  375 px - 767 px --------------------');\n    //         // // console.log('window.innerWidth = ' + window.innerWidth);\n    //         // console.log('windowWidth = ' + windowWidth);\n\n    //         meshScaleFactor = 0.0225;\n\n    //         break;\n\n    //     default:\n\n    //         // console.log('');\n    //         // console.log('-------------------- LOGOMESH responsive: default --------------------');\n    //         // // console.log('window.innerWidth = ' + window.innerWidth);\n    //         // console.log('windowWidth = ' + windowWidth);\n\n    //         meshScaleFactor = 0.05;\n\n    //         break;\n    // };\n\n    //#endregion -------------------- LOGOMESH responsive --------------------\n\n\n    // let meshScaleFactor = 0.005;\n    let meshScaleFactor = 0.05;\n\n    // const meshColor = \"#000000\";\n    // const meshColor = \"#ff0000\";\n    const meshColor = \"#0000ff\";\n    // const meshColor = \"#000022\";\n\n\n    return (\n        <mesh id={props.id} scale={[meshScaleFactor, -meshScaleFactor, meshScaleFactor]} position={center} castShadow receiveShadow ref={logoMesh_Ref}>\n            {/* <meshStandardMaterial attach=\"material\" color={meshColor} side={DoubleSide} depthWrite={true} transparent opacity={props.fillOpacity} roughness=\"0\" metalness=\"0.4\" /> */}\n            {/* <meshStandardMaterial attach=\"material\" color={meshColor} side={DoubleSide} depthWrite={true} transparent opacity={props.fillOpacity} roughness=\"1\" metalness=\"1\" /> */}\n            {/* <meshStandardMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n\n            {/* <meshPhongMaterial attach=\"material\" color={meshColor} side={DoubleSide} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshPhongMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n\n            {/* <meshBasicMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshDepthMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshDistanceMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshLambertMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshMatcapMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            <meshNormalMaterial attach=\"material\" color={meshColor} wireframe={true} depthWrite={true} transparent opacity={props.fillOpacity} />\n            {/* <meshPhongMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshPhysicalMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshStandardMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n            {/* <meshToonMaterial attach=\"material\" color={meshColor} depthWrite={true} transparent opacity={props.fillOpacity} /> */}\n\n            <extrudeBufferGeometry attach=\"geometry\" args={[[props.shape], extrudeSettings]} />\n        </mesh>\n    );\n}\n\n//#endregion ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\n\n\n//#region ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\n// const logoGroup_Ref = React.createRef();\n\nfunction LogoShape(props) {\n// const LogoShape = React.forwardRef((props, logoGroup_Ref) => {\n\n    //#region -------------------- LOGOSHAPE shapes --------------------\n\n    // console.log('');\n    // console.log('-------------------- LOGOSHAPE shapes --------------------');\n    // console.log(props);\n\n\n    const { paths } = useLoader(SVGLoader, props.url)\n\n    const shapes = useMemo(() =>\n        paths.flatMap((thisPath, i) =>\n            thisPath.toShapes(true).map((shape) =>\n                ({ shape, color: props.fillColor, fillOpacity: props.fillOpacity, extrudeDir: props.extrudeDir, nodeID: thisPath.userData.node.id })\n                // ({ shape, color: props.fillColor, fillOpacity: 0, extrudeDir: props.extrudeDir, nodeID: thisPath.userData.node.id })\n            )\n            // ), []\n        ), [paths, props]\n    );\n\n\n    // console.log('paths:');\n    // console.log(paths);\n\n    // console.log('shapes:');\n    // console.log(shapes);\n\n    //#endregion -------------------- LOGOSHAPE shapes --------------------\n\n\n    //#region -------------------- LOGOSHAPE center --------------------\n\n    const [center, setCenter] = useState([0, 0, 0])\n\n    const logoGroup_Ref = useRef()\n\n    useEffect(() => {\n\n        const bBox = new Box3().setFromObject(logoGroup_Ref.current)\n        const bSphere = new Sphere()\n\n        bBox.getBoundingSphere(bSphere)\n\n        setCenter([0, -bSphere.center.y, 0])\n\n    }, [logoGroup_Ref]);\n\n    //#endregion -------------------- LOGOSHAPE center --------------------\n\n\n    //#region -------------------- LOGOSHAPE spin --------------------\n\n    // const testRotation = [0, 90, 0];\n\n    useFrame(() => {\n        logoGroup_Ref.current.rotation.y += 0.025;\n        // logoGroup_Ref.current.rotation.y = -0.5;\n    });\n\n    //#endregion -------------------- LOGOSHAPE spin --------------------\n\n\n    return (\n        <group position={center} ref={logoGroup_Ref}>\n            {shapes.map((props) => (\n                <LogoMesh key={props.shape.uuid} {...props} />\n            ))}\n        </group>\n\n    )\n};\n\n//     );\n// }, [logoGroup_Ref]);\n\n//#endregion ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\n\nexport default function Logo() {\n\n    // console.log('');\n    // console.log('====================  export default function Logo()  ====================');\n\n\n    const logoSVG = remoteGitImageLoc + 'logo/shigeru_logo_extrude_clean_sm.svg';\n    // const logoSVG01 = remoteGitImageLoc + 'logo/shigeru_logo_extrude_clean_sm.svg';\n    // const logoSVG02 = remoteGitImageLoc + 'logo/shigeru_logo_extrude_clean_sm_rev.svg';\n\n\n    //#region -------------------- ASSETS _Ref --------------------\n\n    // const logoGroup_Ref = useRef();\n    // const logoGroup_FwdRef = useRef();\n\n    // const logoShape_Ref = useRef();\n    // const logoShapePOS_Ref = useRef();\n    // const logoShapeNEG_Ref = useRef();\n\n    // console.log('logoGroup_Ref.current = ' + logoGroup_Ref.current);\n    // console.log('logoShapePOS_Ref.current = ' + logoShapePOS_Ref.current);\n    // console.log('logoShapeNEG_Ref.current = ' + logoShapeNEG_Ref.current);\n\n    //#endregion -------------------- ASSETS _Ref --------------------\n\n\n    //#region -------------------- useState DEFs --------------------\n\n    // // console.log('');\n    // // console.log('-------------------- useState DEFs --------------------');\n\n    // let [windowWidth, setWindowWidth] = useState(getWidth());\n\n    // // console.log('windowWidth = ' + windowWidth);\n\n    //#endregion -------------------- useState DEFs --------------------\n\n\n    //#region -------------------- LOGOSHAPE center --------------------\n\n    // const [center, setCenter] = useState([0, 0, 0])\n\n    // const logoGroup_Ref = useRef()\n\n    // useEffect(() => {\n\n    //     const bBox = new Box3().setFromObject(logoGroup_Ref.current)\n    //     const bSphere = new Sphere()\n\n    //     bBox.getBoundingSphere(bSphere)\n\n    //     setCenter([0, -bSphere.center.y, 0])\n\n    // }, []);\n\n    //#endregion -------------------- LOGOSHAPE center --------------------\n\n\n    //#region -------------------- LOGOSHAPE spin --------------------\n\n    // useFrame(() => {\n    //     logoGroup_Ref.current.rotation.y += 0.025;\n    //     // logoGroup_FwdRef.current.rotation.y += 0.025;\n    // });\n\n    //#endregion -------------------- LOGOSHAPE spin --------------------\n\n\n    //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    // useEffect(() => {\n\n    //     let timeoutId = null;\n\n    //     const resizeListener = () => {\n\n    //         console.log('useEffect: WINDOW RESIZE - resizeListener triggered!');\n    //         console.log(logoShape_Ref.current);\n\n    //         // prevent execution of previous setTimeout\n    //         clearTimeout(timeoutId);\n\n    //         timeoutId = setTimeout(() => setWindowWidth(getWidth()), 150);\n\n    //         // centerObject();\n    //         centerObject(logoShape_Ref.current);\n    //     };\n\n    //     window.addEventListener('resize', resizeListener);\n\n    //     return () => {\n    //         window.removeEventListener('resize', resizeListener);\n    //     }\n\n    // }, []);\n\n    //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n    // <LogoShape url={logoSVG} fillOpacity=\"0.25\" />\n    // <LogoShape url={logoSVG} fillOpacity=\"0.25\" ref={logoGroup_Ref} />\n    // <LogoShape url={logoSVG} fillOpacity=\"0.25\" ref={logoGroup_FwdRef} />\n\n    return (\n        <>\n            {/* <LogoShape url=\"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/logo/shigeru_logo_extrude_clean.svg\" fillOpacity=\"0.25\" extrudeDir=\"positive\" />\n            <LogoShape url=\"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/logo/shigeru_logo_extrude_clean.svg\" fillOpacity=\"0.25\" extrudeDir=\"negative\" />\n\n            <LogoShape url={logoSVG} fillOpacity=\"0.25\" extrudeDir=\"positive\" ref={logoGroup_Ref} />\n            <LogoShape url={logoSVG} fillOpacity=\"0.25\" extrudeDir=\"negative\" ref={logoGroup_Ref} />\n\n            <LogoShape url={logoSVG} fillOpacity=\"0.25\" />\n            <LogoShape url={logoSVG} fillOpacity=\"0.25\" ref={logoGroup_Ref} /> */}\n\n            <LogoShape id=\"logoSVGid\" url={logoSVG} fillOpacity=\"0.25\" extrudeDir=\"positive\" />\n            {/* <LogoShape id=\"logoSVG01id\" url={logoSVG01} fillOpacity=\"0.5\" extrudeDir=\"positive\" />\n            <LogoShape id=\"logoSVG02id\" url={logoSVG02} fillOpacity=\"0.5\" extrudeDir=\"negative\" /> */}\n        </>\n    );\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\n// import { Suspense } from 'react';\n// import { useRef } from 'react';\n// import { useState } from 'react';\n// import { useEffect } from 'react';\n// import { useFrame } from 'react';\n\nimport { DoubleSide } from \"three\";\n\n// import { gsap } from 'gsap';\n\n// import Text from './Text';\n\nimport Hed from \"./Hed\";\nimport Logo from \"./Logo\";\n// import Cubes from \"./Cubes\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CONSTANTS ====================\n\n// const getWidth = () => window.innerWidth\n//     || document.documentElement.clientWidth\n//     || document.body.clientWidth;\n\n//#endregion ==================== CONSTANTS ====================\n\n\n//#region ==================== FUNCTIONS ====================\n\n// function centerObject(thisObject) {\n//     console.log('');\n//     console.log('==================== FUNCTION: centerObject(thisObject) ====================');\n//     console.log('thisObject = ');\n//     console.log(thisObject);\n//     // console.log(thisObject.children);\n//     // console.log(thisObject.position);\n\n//     // gsap.set([thisObject], { x: 2, y: 2 });\n//     // gsap.to([thisObject], { x: 2, y: 2, duration: 1 });\n\n//     // thisObject.position = [3, 0, 0];\n// }\n\n//#endregion ==================== FUNCTIONS ====================\n\n\n\n// export default () => {\nexport default function Scene() {\n\n    // console.log('');\n    // console.log('====================  export default function Scene()  ====================');\n\n    //#region ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    //#region -------------------- GROUNDPLANE --------------------\n\n    function GroundPlane() {\n        return (\n            <mesh rotation={[5, 0, 0]} position={[0, -5, 0]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} />\n                {/* <meshPhongMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} /> */}\n            </mesh>\n        );\n    }\n\n    //#endregion -------------------- GROUNDPLANE --------------------\n\n\n    //#region -------------------- BACKDROP --------------------\n\n    function BackDrop() {\n\n        return (\n            <mesh position={[0, -1, -5]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} />\n                {/* <meshPhongMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} /> */}\n            </mesh>\n        );\n    }\n\n    //#endregion -------------------- BACKDROP --------------------\n\n    //#endregion ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n\n\n\n    //#region -------------------- ASSETS _Ref --------------------\n\n    // const scene_Ref = useRef();\n    // const logo_Ref = useRef();\n\n    //#endregion -------------------- ASSETS _Ref --------------------\n\n\n    //#region -------------------- useState DEFs --------------------\n\n    // console.log('');\n    // console.log('-------------------- useState DEFs --------------------');\n\n    // let [windowWidth, setWindowWidth] = useState(getWidth());\n\n    // console.log('windowWidth = ' + windowWidth);\n\n    //#endregion -------------------- useState DEFs --------------------\n\n\n    //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    // useEffect(() => {\n\n    //     let timeoutId = null;\n\n    //     const resizeListener = () => {\n\n    //         // console.log('useEffect: WINDOW RESIZE - resizeListener triggered!');\n    //         // // console.log('useEffect: WINDOW RESIZE - logo_Ref.current = ' + logo_Ref.current);\n    //         // // console.log('useEffect: WINDOW RESIZE - scene_Ref.current = ' + scene_Ref.current);\n    //         // console.log('useEffect: WINDOW RESIZE - scene_Ref.current.children = ' + scene_Ref.current.children);\n    //         // console.log(scene_Ref.current.children);\n    //         // console.log('useEffect: WINDOW RESIZE - scene_Ref.current.children[1] = ' + scene_Ref.current.children[1]);\n    //         // console.log(scene_Ref.current.children[1]);\n\n    //         // prevent execution of previous setTimeout\n    //         clearTimeout(timeoutId);\n\n    //         timeoutId = setTimeout(() => setWindowWidth(getWidth()), 150);\n\n    //         // centerObject();\n\n    //         // centerObject(logo_Ref.current);\n\n    //         // centerObject(scene_Ref.current);\n    //         centerObject(scene_Ref.current.children[0]);\n    //         // centerObject(scene_Ref.current.children[1]);\n    //     };\n\n    //     window.addEventListener('resize', resizeListener);\n\n    //     return () => {\n    //         window.removeEventListener('resize', resizeListener);\n    //     }\n\n    // }, []);\n\n    //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n\n\n\n    return (\n        <group>\n            {/* <group ref={scene_Ref}> */}\n            <Hed />\n            <Logo />\n            {/* <Logo nodeID='thisLogo' /> */}\n            {/* <Cubes /> */}\n            <BackDrop />\n            <GroundPlane />\n        </group>\n    );\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n// export default () => {\nexport default function Lights(props) {\n\n    //#region ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    //#region -------------------- LIGHTS: KeyLight --------------------\n\n    function KeyLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                color={color}\n                intensity={brightness}\n                position={[-2, 0, 5]}\n                lookAt={[0, 0, 0]}\n                penumbra={1}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: KeyLight --------------------\n\n\n    //#region -------------------- LIGHTS: FillLight --------------------\n\n    function FillLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                intensity={brightness}\n                color={color}\n                position={[2, 1, 4]}\n                lookAt={[0, 0, 0]}\n                penumbra={2}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: FillLight --------------------\n\n\n    //#region -------------------- LIGHTS: RimLight --------------------\n\n    function RimLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={2}\n                height={2}\n                intensity={brightness}\n                color={color}\n                position={[1, 4, -2]}\n                rotation={[0, 180, 0]}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: RimLight --------------------\n\n\n    //#region -------------------- LIGHTS: ShadowLight --------------------\n\n    function ShadowLight() {\n        return (\n            <directionalLight\n                castShadow\n                position={[2.5, 0, 5]}\n                intensity={0.05}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                shadow-camera-near={0.1}\n                shadow-camera-far={50}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: ShadowLight --------------------\n\n    //#endregion ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n    return (\n        <group>\n            <KeyLight brightness={10} color=\"#ccccff\" />\n            <FillLight brightness={10} color=\"#ffffff\" />\n            <RimLight brightness={10} color=\"#eeeeff\" />\n            <ShadowLight />\n        </group>\n    );\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\n// import { useFrame } from \"react\";\n\nimport { useThree } from \"react-three-fiber\";\n// import { extend } from \"react-three-fiber\";\n\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n// extend({ OrbitControls });\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CAMERA01 - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n\n// function Camera01(props) {\n//     const cameraRef = useRef();\n//     const { setDefaultCamera } = useThree();\n\n//     // Make the camera known to the system\n//     useEffect(() => void setDefaultCamera(\n//         cameraRef.current\n//     // ), []);\n//     ), [setDefaultCamera]);\n\n//     // Update it every frame\n//     // useFrame(() => cameraRef.current.updateMatrixWorld());\n\n\n//     return (\n//         <perspectiveCamera ref={cameraRef} {...props} />\n//     );\n// }\n\n//#endregion ==================== CAMERA01 - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n\n\n// export default function Camera() {\nexport default function Camera(props) {\n    // export default (props) => {\n    // export default () => {\n\n    const cameraRef = useRef();\n    const { setDefaultCamera } = useThree();\n\n    // Make the camera known to the system\n    useEffect(() => void setDefaultCamera(cameraRef.current), [setDefaultCamera]);\n\n    // Update it every frame\n    // useFrame(() => cameraRef.current.updateMatrixWorld());\n\n    return (\n        <perspectiveCamera {...props} ref={cameraRef} />\n    );\n\n\n    // return (\n    //     <Camera01 position={[0, 0, 7.5]} fov={40} />\n    // );\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { Suspense } from 'react';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n// import { useFrame } from 'react';\n\nimport { Canvas } from \"react-three-fiber\";\nimport Scene from \"./components/Scene\";\nimport Lights from \"./components/Lights\";\nimport Camera from \"./components/Camera\";\n\nimport * as THREE from 'three';\n\n// import \"./styles.css\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CONSTANTS ====================\n\nconst getWidth = () => window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth;\n\n//#endregion ==================== CONSTANTS ====================\n\n\n//#region ==================== FUNCTIONS ====================\n\nfunction centerObject(thisObject) {\n    console.log('');\n    console.log('==================== FUNCTION: centerObject(thisObject) ====================');\n    console.log('thisObject = ');\n    console.log(thisObject);\n    // console.log(thisObject.children);\n    // console.log(thisObject.position);\n\n    // gsap.set([thisObject], { x: 2, y: 2 });\n    // gsap.to([thisObject], { x: 2, y: 2, duration: 1 });\n\n    // thisObject.position = [3, 0, 0];\n}\n\n//#endregion ==================== FUNCTIONS ====================\n\n\n\n\n\n\n\nexport default function Home() {\n\n    window.scene = new THREE.Scene();\n    window.THREE = THREE;\n\n\n    //#region -------------------- ASSETS _Ref --------------------\n\n    // const logoGroup_Ref = useRef();\n\n    const canvas_Ref = useRef();\n    // const logoShapePOS_Ref = useRef();\n    // const logoShapeNEG_Ref = useRef();\n\n    // console.log('logoGroup_Ref.current = ' + logoGroup_Ref.current);\n    // console.log('logoShapePOS_Ref.current = ' + logoShapePOS_Ref.current);\n    // console.log('logoShapeNEG_Ref.current = ' + logoShapeNEG_Ref.current);\n\n    //#endregion -------------------- ASSETS _Ref --------------------\n\n\n    //#region -------------------- useState DEFs --------------------\n\n    let [windowWidth, setWindowWidth] = useState(getWidth());\n\n    console.log('windowWidth = ' + windowWidth);\n\n    //#endregion -------------------- useState DEFs --------------------\n\n\n    //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n    useEffect(() => {\n\n        let timeoutId = null;\n\n        const resizeListener = () => {\n\n            console.log('useEffect: WINDOW RESIZE - resizeListener triggered!');\n            console.log(canvas_Ref.current);\n\n            // prevent execution of previous setTimeout\n            clearTimeout(timeoutId);\n\n            timeoutId = setTimeout(() => setWindowWidth(getWidth()), 150);\n\n            // centerObject();\n            centerObject(canvas_Ref.current);\n        };\n\n        window.addEventListener('resize', resizeListener);\n\n        return () => {\n            window.removeEventListener('resize', resizeListener);\n        }\n\n    }, []);\n\n    //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n\n    return (\n        <Canvas shadowMap>\n            <Suspense fallback={null}>\n                <Lights />\n                {/* <Camera /> */}\n                <Camera position={[0, 0, 7.5]} fov={40} />\n                <Scene />\n            </Suspense>\n        </Canvas>\n    );\n}\n","import React from 'react';\n\nimport Home from './Home';\n\nfunction App() {\n    return (\n        <Home />\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n// import Home from './Home';\n\nimport './styles.css'\n\nReactDOM.render(\n\n    <React.StrictMode>\n        <App />,\n        {/* <Home />, */}\n    </React.StrictMode>,\n\n    // <App />,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}