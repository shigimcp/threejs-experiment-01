{"version":3,"sources":["serviceWorker.js","fonts/fonts.jsx","components/Logo.jsx","components/SingleCube.jsx","components/Cubes.jsx","components/Scene.jsx","components/Lights.jsx","components/Camera.jsx","Home.jsx","index.js"],"names":["Boolean","window","location","hostname","match","LogoShape","props","paths","useLoader","SVGLoader","url","shapes","useMemo","flatMap","thisPath","i","toShapes","map","shape","color","fillColor","fillOpacity","extrudeDir","nodeID","userData","node","id","useState","center","setCenter","logoGroupRef","useRef","useEffect","box","Box3","setFromObject","current","sphere","Sphere","getBoundingSphere","y","useFrame","rotation","position","ref","LogoMesh","key","uuid","extrudeSettings","curveSegments","steps","depth","bevelEnabled","logoMeshRef","x","scale","castShadow","receiveShadow","attach","side","DoubleSide","depthWrite","transparent","opacity","metalness","args","Logo","Cube","meshRef","timeRef","isHovered","setIsHovered","isActive","setIsActive","isActiveRef","random","timeModMemo","Math","sin","onHover","useCallback","e","value","stopPropagation","onClick","v","onPointerOver","onPointerOut","roughness","Cubes","cubeGroup","nodesCubes","Array","el","Scene","GroundPlane","BackDrop","Hed","genOptions","font","fonts","clipRect","lineHeight","letterSpacing","textAlign","materialType","anchorX","anchorY","hedOptions","fontSize","subhedOptions","text","Lights","KeyLight","brightness","width","height","intensity","lookAt","penumbra","FillLight","RimLight","ShadowLight","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Camera01","cameraRef","setDefaultCamera","useThree","Camera","fov","Home","scene","THREE","shadowMap","fallback","extend","Text","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.da825ad4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n    // Roboto: \"https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff\",\n    // \"Noto Sans\": \"https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr5TRG.woff\",\n    // //too thin: 'Alex Brush': 'https://fonts.gstatic.com/s/alexbrush/v8/SZc83FzrJKuqFbwMKk6EhUXz6w.woff',\n    // Comfortaa: \"https://fonts.gstatic.com/s/comfortaa/v12/1Ptsg8LJRfWJmhDAuUs4TYFs.woff\",\n    // Cookie: \"https://fonts.gstatic.com/s/cookie/v8/syky-y18lb0tSbf9kgqU.woff\",\n    // //throws: 'Cutive Mono': 'https://fonts.gstatic.com/s/cutivemono/v6/m8JWjfRfY7WVjVi2E-K9H6RCTmg.woff',\n    // //throws: 'Gabriela': 'https://fonts.gstatic.com/s/gabriela/v6/qkBWXvsO6sreR8E-b8m5xL0.woff',\n    // Philosopher: \"https://fonts.gstatic.com/s/philosopher/v9/vEFV2_5QCwIS4_Dhez5jcWBuT0s.woff\",\n    // Quicksand: \"https://fonts.gstatic.com/s/quicksand/v7/6xKtdSZaM9iE8KbpRA_hK1QL.woff\",\n    // Trirong: \"https://fonts.gstatic.com/s/trirong/v3/7r3GqXNgp8wxdOdOn4so3g.woff\",\n    // Trocchi: \"https://fonts.gstatic.com/s/trocchi/v6/qWcqB6WkuIDxDZLcPrxeuw.woff\",\n    // \"Advent Pro\": \"https://fonts.gstatic.com/s/adventpro/v7/V8mAoQfxVT4Dvddr_yOwhTqtLg.woff\",\n    // \"Henny Penny\": \"https://fonts.gstatic.com/s/hennypenny/v5/wXKvE3UZookzsxz_kjGSfPQtvXQ.woff\",\n    // Orbitron: \"https://fonts.gstatic.com/s/orbitron/v9/yMJRMIlzdpvBhQQL_Qq7dys.woff\",\n    // Sacramento: \"https://fonts.gstatic.com/s/sacramento/v5/buEzpo6gcdjy0EiZMBUG4C0f-w.woff\",\n    // \"Snowburst One\": \"https://fonts.gstatic.com/s/snowburstone/v5/MQpS-WezKdujBsXY3B7I-UT7SZieOA.woff\",\n    // Syncopate: \"https://fonts.gstatic.com/s/syncopate/v9/pe0sMIuPIYBCpEV5eFdCBfe5.woff\",\n    // Wallpoet: \"https://fonts.gstatic.com/s/wallpoet/v9/f0X10em2_8RnXVVdUObp58I.woff\",\n    // \"Sirin Stencil\": \"https://fonts.gstatic.com/s/sirinstencil/v6/mem4YaWwznmLx-lzGfN7MdRyRc9MAQ.woff\",\n    // \"Roboto Slab\": \"https://rawcdn.githack.com/google/fonts/3b179b729ac3306ab2a249d848d94ff08b90a0af/apache/robotoslab/static/RobotoSlab-Black.ttf\",\n\n    // \"AnimeAceItalic\": \"./AnimeAceItalic.woff\",\n    // \"Chalet-ParisNineteenSixty\": \"./ChaleParNinSix.woff\"\n\n    \"AnimeAceItalic\": \"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/fonts/AnimeAceItalic.woff\",\n    \"Chalet-ParisNineteenSixty\": \"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/fonts/ChaleParNinSix.woff\"\n};\n","//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useRef, useMemo } from 'react';\n\nimport { DoubleSide } from \"three\";\nimport { Box3, Sphere } from \"three\";\n\nimport { useLoader } from 'react-three-fiber';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { useFrame } from 'react-three-fiber';\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\nfunction LogoShape(props) {\n\n    //#region -------------------- LOGOSHAPE shapes --------------------\n\n    // console.log('');\n    // console.log('-------------------- LOGOSHAPE shapes --------------------');\n    // console.log(props);\n\n\n    const { paths } = useLoader(SVGLoader, props.url)\n\n    const shapes = useMemo(() =>\n        paths.flatMap((thisPath, i) =>\n            thisPath.toShapes(true).map((shape) =>\n                // ({ shape, color: thisPath.color, fillOpacity: props.fillOpacity, extrudeDir: props.extrudeDir, nodeID: thisPath.userData.node.id })\n                ({ shape, color: props.fillColor, fillOpacity: props.fillOpacity, extrudeDir: props.extrudeDir, nodeID: thisPath.userData.node.id })\n            )\n            // ), []\n        ), [paths, props]\n    )\n\n\n    // console.log('paths:');\n    // console.log(paths);\n\n    // console.log('shapes:');\n    // console.log(shapes);\n\n    //#endregion -------------------- LOGOSHAPE shapes --------------------\n\n\n    //#region -------------------- LOGOSHAPE center --------------------\n\n    const [center, setCenter] = useState([0, 0, 0])\n\n    const logoGroupRef = useRef()\n\n    useEffect(() => {\n        const box = new Box3().setFromObject(logoGroupRef.current)\n        const sphere = new Sphere()\n        box.getBoundingSphere(sphere)\n        setCenter([0, -sphere.center.y, 0])\n    }, [])\n\n    //#endregion -------------------- LOGOSHAPE center --------------------\n\n\n    //#region -------------------- LOGOSHAPE spin --------------------\n\n    useFrame(() => {\n        logoGroupRef.current.rotation.y += 0.025;\n    });\n\n    //#endregion -------------------- LOGOSHAPE spin --------------------\n\n\n    return (\n        <group position={center} ref={logoGroupRef}>\n            {shapes.map((props) => (\n                <LogoMesh key={props.shape.uuid} {...props} />\n            ))}\n        </group>\n    )\n}\n\n//#endregion ==================== LOGOSHAPE: SVG - REF: https://codesandbox.io/s/react-three-fiber-react-spring-svg-parallax-forked-8hdg1 ====================\n\n\n\n//#region ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\nfunction LogoMesh(props) {\n\n    // console.log('==================== LOGOMESH ====================');\n    // console.log(props);\n\n    //#region -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n    let extrudeSettings = {\n        curveSegments: 7, \n        steps: 2, \n        depth: 25, \n        bevelEnabled: false, \n\n        // curveSegments: 7,\n        // steps: 2,\n        // depth: 25,\n        // bevelEnabled: true, \n        // bevelThickness: 5,\n        // bevelSize: 5,\n        // bevelOffset: 0,\n        // bevelSegments: 5, \n    };\n\n    if (props.extrudeDir === 'negative') {\n        extrudeSettings.depth = extrudeSettings.depth * -1;\n    }\n\n    //#endregion -------------------- LOGOMESH extrudeSettings - REF: https://threejs.org/docs/#api/en/geometries/ExtrudeGeometry --------------------\n\n\n    //#region -------------------- LOGOMESH center --------------------\n\n    const logoMeshRef = useRef()\n    const [center, setCenter] = useState([0, 0, 0])\n\n    \n    useEffect(() => {\n        const box = new Box3().setFromObject(logoMeshRef.current)\n        const sphere = new Sphere()\n        box.getBoundingSphere(sphere)\n\n\n        //#region - - - - - - - - - - - LOGOMESH center: via props.nodeID (see LogoShape below) - - - - - - - - - - -\n\n        switch (props.nodeID) {\n            // case 'afro':\n\n            //     console.log('')\n            //     console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n            //     console.log(logoMeshRef.current.material.color)\n            //     console.log(logoMeshRef.current)\n            //     console.log('props.nodeID = ' + props.nodeID)\n\n            //     setCenter([-sphere.center.x, 0, 0])\n\n            //     console.log('center = ' + center)\n\n            //     break;\n\n            // case 'glassesID':\n\n            //     console.log('')\n            //     console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n            //     console.log(logoMeshRef.current.material.color)\n            //     console.log(logoMeshRef.current)\n            //     console.log('props.nodeID = ' + props.nodeID)\n\n            //     setCenter([-sphere.center.x, 0, 0])\n\n            //     console.log('center = ' + center)\n\n            //     break;\n\n            case 'kanji_ko01ID':\n\n                // console.log('')\n                // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n                // console.log(logoMeshRef.current.material.color)\n                // console.log(logoMeshRef.current)\n                // console.log('props.nodeID = ' + props.nodeID)\n\n                setCenter([-sphere.center.x * 0.809716599190283, 0, 0])\n\n                break;\n\n            case 'kanji_ko02ID':\n\n                // console.log('')\n                // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n                // console.log(logoMeshRef.current.material.color)\n                // console.log(logoMeshRef.current)\n                // console.log('props.nodeID = ' + props.nodeID)\n\n                setCenter([-sphere.center.x * 0.798522414124903, 0, 0])\n\n                break;\n\n            default:\n\n                // console.log('')\n                // console.log('- - - - - - - - - - - LOGOMESH center: switch (props.nodeID) ' + props.nodeID + ' - - - - - - - - - - -');\n                // console.log(logoMeshRef.current.material.color)\n                // console.log(logoMeshRef.current)\n                // console.log('props.nodeID = ' + props.nodeID)\n\n                setCenter([-sphere.center.x, 0, 0])\n\n                break;\n        }\n\n        //#endregion - - - - - - - - - - - LOGOMESH center: via props.nodeID (see LogoShape below) - - - - - - - - - - -\n\n    }, [props.nodeID])\n\n    //#endregion -------------------- LOGOMESH center --------------------\n\n    \n    const meshScaleFactor = 0.005;\n    // const meshColor = \"#000000\";\n    // const meshColor = \"#ff0000\";\n    const meshColor = \"#000022\";\n\n    return (\n        <mesh id={props.id} scale={[meshScaleFactor, -meshScaleFactor, meshScaleFactor]} position={center} castShadow receiveShadow ref={logoMeshRef}>\n            <meshStandardMaterial attach=\"material\" color={meshColor} side={DoubleSide} depthWrite={true} transparent opacity={props.fillOpacity} metalness=\"0.4\" />\n            <extrudeBufferGeometry attach=\"geometry\" args={[[props.shape], extrudeSettings]} />\n        </mesh>\n    )\n}\n\n//#endregion ==================== LOGOMESH: EXTRUDE - REF: https://spectrum.chat/react-three-fiber/general/hole-from-imported-svg-is-reversing-should-be-a-donut-instead-is-a-dot~d235bb19-8d5c-4c4b-af74-faae8484204f ====================\n\n\n\nexport default function Logo() {\n    return (\n        <group>\n            <LogoShape url=\"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/logo/shigeru_logo_extrude_clean.svg\" fillOpacity=\"0.25\" extrudeDir=\"positive\" />\n            <LogoShape url=\"https://raw.githubusercontent.com/shigimcp/threejs-experiment-01/main/src/.github/images/logo/shigeru_logo_extrude_clean.svg\" fillOpacity=\"0.25\" extrudeDir=\"negative\" />\n        </group>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React, { useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\nimport { DoubleSide } from \"three\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n// export default () => {\nexport default function Cube() {\n\n    const meshRef = useRef();\n    const timeRef = useRef(0);\n\n    const [isHovered, setIsHovered] = useState(false);\n    const [isActive, setIsActive] = useState(false);\n\n    const isActiveRef = useRef(isActive);\n\n\n    //#region ==================== REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n    //        ==================== REF: https://codesandbox.io/s/alligatordemoreact-three-fiber-forked-ic94p ====================\n\n    // -------------------- position --------------------\n\n    const orbitRadius = 3;\n\n    const position = useMemo(() => {\n        // return [random(-3, 3, true), random(-3, 3, true), random(-3, 3, true)];\n        // return [random(-1.5, 1.5, true), random(-1.5, 1.5, true), random(-1.5, 1.5, true)];\n        // return [random(-orbitRadius, orbitRadius, true), random(-orbitRadius, orbitRadius, true), random(-orbitRadius, orbitRadius, true)];\n        return [random(-orbitRadius, orbitRadius, true), 0, random(-orbitRadius, orbitRadius, true)];\n    }, []);\n\n\n    // -------------------- random time mod factor --------------------\n\n    const timeModMemo = useMemo(() => random(0.1, 4, true), []);\n\n\n    // -------------------- hover color --------------------\n\n    // const color = isHovered ? 0xe5d54d : (isActive ? 0xf7e7e5 : 0xf95b3c);\n    const color = isHovered ? 0x666666 : (isActive ? 0x000000 : 0xdddddd);\n\n\n    // -------------------- useEffect of the activeState --------------------\n\n    useEffect(() => {\n        isActiveRef.current = isActive;\n    }, [isActive]);\n\n\n    // -------------------- raf loop --------------------\n\n    useFrame(() => {\n        meshRef.current.rotation.y += 0.01 * timeModMemo;\n\n        if (isActiveRef.current) {\n            timeRef.current += 0.03;\n            meshRef.current.position.y = position[1] + Math.sin(timeRef.current) * 0.4;\n        }\n    });\n\n\n    // -------------------- Events --------------------\n\n    const onHover = useCallback(\n        (e, value) => {\n            e.stopPropagation();\n            setIsHovered(value);\n        },\n        [setIsHovered]\n    );\n\n    const onClick = useCallback(\n        e => {\n            e.stopPropagation();\n            setIsActive(v => !v);\n        },\n        [setIsActive]\n    );\n\n    //#endregion ==================== REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n\n    const cubeDims = [0.005, 0.75, 0.75];\n\n    return (\n        <mesh ref={meshRef} position={position} onClick={e => onClick(e)} onPointerOver={e => onHover(e, true)} onPointerOut={e => onHover(e, false)} castShadow receiveShadow>\n            <boxBufferGeometry attach=\"geometry\" args={cubeDims} />\n            <meshStandardMaterial attach=\"material\" color={color} roughness={0.6} side={DoubleSide} metalness={0.4} />\n        </mesh>\n    );\n};\n","//#region ==================== IMPORTS ====================\n\nimport React, { useRef } from \"react\";\nimport { map } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\n\nimport Cube from \"./SingleCube\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CUBES - REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n\n// export default () => {\nexport default function Cubes(props) {\n    const cubeGroup = useRef();\n\n    useFrame(() => {\n        cubeGroup.current.rotation.y += 0.005;\n    });\n\n    const nodesCubes = map(new Array(5), (el, i) => {\n        return <Cube key={i} />;\n    });\n\n\n    return (\n        <group ref={cubeGroup}>\n            {nodesCubes}\n        </group>\n    )\n}\n\n//#endregion ==================== CUBES - REF: https://www.digitalocean.com/community/tutorials/react-react-with-threejs ====================\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\n// import { useState } from \"react\";\n// import { useRef } from \"react\";\n\nimport { DoubleSide } from \"three\";\n// import { MeshPhongMaterial } from \"three\";\n\n// import Text from \"./Text\";\nimport fonts from \"../fonts/fonts\";\n\nimport { extend } from \"react-three-fiber\";\n\n// import { Canvas3D, Object3DFacade } from \"troika-3d\";\n// import { Text3DFacade } from \"troika-3d-text\";\n// import { Text } from \"troika-three-text\";\n// import { Text as TextMeshImpl } from 'troika-three-text';\nimport { Text } from \"@react-three/drei\";\n\nimport Logo from \"./Logo\";\nimport Cubes from \"./Cubes\";\n\n\nextend({ Text });\n// extend({ TextMeshImpl });\n\n//#endregion ==================== IMPORTS ====================\n\n\n// export default () => {\nexport default function Scene() {\n\n    //#region ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    //#region -------------------- GROUNDPLANE --------------------\n\n    function GroundPlane() {\n        return (\n            <mesh rotation={[5, 0, 0]} position={[0, -5, 0]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} />\n            </mesh>\n        );\n    }\n\n    //#endregion -------------------- GROUNDPLANE --------------------\n\n\n    //#region -------------------- BACKDROP --------------------\n\n    function BackDrop() {\n\n        return (\n            <mesh position={[0, -1, -5]} receiveShadow>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshStandardMaterial attach=\"material\" color=\"white\" side={DoubleSide} metalness={0.4} />\n            </mesh>\n        );\n    }\n\n    //#endregion -------------------- BACKDROP --------------------\n\n    //#endregion ==================== SCENE - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n\n    //#region ==================== TEXT - REF: https://www.npmjs.com/package/troika-three-text ====================\n    //        ==================== TEXT - REF: https://codesandbox.io/s/troika-3d-text-via-react-three-fiber-forked-1ebyu ====================\n\n    function Hed() {\n\n        const textHed = \"Shigeru McPherson\";\n        const textSubhed = \"digital designer • art director\";\n\n        // const textHed = \"Shi\";\n        // const textSubhed = \"dig\";\n\n        // const [rotation, setRotation] = useState([0, 0, 0, 0]);\n        // const [genOptions, setOpts] = useState({\n\n\n        //#region -------------------- genOptions --------------------\n\n        const genOptions = ({\n            font: fonts[\"Chalet-ParisNineteenSixty\"],\n            // fontSize: 0.75,\n            // color: \"#9999ff\",\n            // maxWidth: 15,\n            // maxWidth: window.innerWidth,\n            // clipRect: [-6.25, 1.75, 150, 150], \n            clipRect: [0, -5, 150, 50], \n            lineHeight: 1,\n            letterSpacing: 0,\n            textAlign: \"left\",\n            materialType: \"meshPhongMaterial\",\n\n            // position: [0, 0, 0],\n            // position: [0, 1.5, -4.25],\n            rotation: [0, 0, 0],\n            anchorX: \"left\",\n            anchorY: \"middle\", \n            // castShadow: true, \n            receiveShadow: true,\n            // font: buildUrl(\"../fonts/ChaleParNinSix.ttf\")\n        });\n\n        //#endregion -------------------- genOptions --------------------\n\n\n        //#region -------------------- hedOptions --------------------\n\n        const hedOptions = ({\n            // font: fonts[\"Chalet-ParisNineteenSixty\"],\n            fontSize: 0.75,\n            color: \"#ff0000\",\n            // color: \"#9999ff\",\n            // maxWidth: 15,\n            // lineHeight: 1,\n            // letterSpacing: 0,\n            // textAlign: \"left\",\n            // materialType: \"meshPhongMaterial\",\n\n            // position: [-6.25, 1.75, -4.25],\n            position: [0, 1.75, -4.25],\n            // position: [-window.innerWidth*0.0025, 1.5, -4.25],\n            // rotation: [0, 0, 0],\n            // anchorX: \"left\",\n            // anchorY: \"middle\"\n        });\n\n        //#endregion -------------------- hedOptions --------------------\n\n\n        //#region -------------------- subhedOptions --------------------\n\n        const subhedOptions = ({\n            // font: fonts[\"Chalet-ParisNineteenSixty\"],\n            fontSize: 0.5,\n            color: \"#0000ff\",\n            // color: \"#ff0000\",\n            // maxWidth: 15,\n            // lineHeight: 1,\n            // letterSpacing: 0,\n            // textAlign: \"left\",\n            // materialType: \"meshPhongMaterial\",\n\n            // position: [-6.25, 1, -4.25],\n            position: [0, 1, -4.25],\n            // rotation: [0, 0, 0],\n            // anchorX: \"left\",\n            // anchorY: \"middle\"\n        });\n\n        //#endregion -------------------- subhedOptions --------------------\n\n\n        return (\n            <group>\n                <Text text={textHed} {...genOptions} {...hedOptions}>\n                    {<meshPhongMaterial attach=\"material\" color={hedOptions.color} />}\n                </Text>\n\n                <Text text={textSubhed} {...genOptions} {...subhedOptions}>\n                    {<meshPhongMaterial attach=\"material\" color={subhedOptions.color} />}\n                </Text>\n            </group>\n        );\n    }\n\n    //#endregion ==================== TEXT - REF: https://www.npmjs.com/package/troika-three-text ====================\n\n\n\n    //#region ==================== REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\n    // function Jumbo() {\n    //     const ref = useRef()\n\n    //     // useFrame(({ clock }) => (ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z = Math.sin(clock.getElapsedTime()) * 0.3))\n\n    //     return (\n    //         <group ref={ref}>\n    //             <Text hAlign=\"left\" position={[0, 4.2, 0]} children=\"REACT\" />\n    //             <Text hAlign=\"left\" position={[0, 0, 0]} children=\"THREE\" />\n    //             <Text hAlign=\"left\" position={[0, -4.2, 0]} children=\"FIBER\" />\n    //             <Text hAlign=\"left\" position={[12, 0, 0]} children=\"4\" size={3} />\n    //             <Text hAlign=\"left\" position={[16.5, -4.2, 0]} children=\"X\" />\n    //         </group>\n    //     )\n    // }\n\n    //#endregion ==================== REF: https://spectrum.chat/react-three-fiber/general/best-way-to-render-text~8597ed37-45e2-4d9a-998d-7351ad5b08ef ====================\n\n\n\n    return (\n        <group>\n            <Hed />\n            <Logo />\n            <Cubes />\n            <BackDrop />\n            <GroundPlane />\n        </group>\n    )\n}\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n// export default () => {\nexport default function Lights(props) {\n\n    //#region ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n    //#region -------------------- LIGHTS: KeyLight --------------------\n\n    function KeyLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                color={color}\n                intensity={brightness}\n                position={[-2, 0, 5]}\n                lookAt={[0, 0, 0]}\n                penumbra={1}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: KeyLight --------------------\n\n\n    //#region -------------------- LIGHTS: FillLight --------------------\n\n    function FillLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={3}\n                height={3}\n                intensity={brightness}\n                color={color}\n                position={[2, 1, 4]}\n                lookAt={[0, 0, 0]}\n                penumbra={2}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: FillLight --------------------\n\n\n    //#region -------------------- LIGHTS: RimLight --------------------\n\n    function RimLight({ brightness, color }) {\n        return (\n            <rectAreaLight\n                width={2}\n                height={2}\n                intensity={brightness}\n                color={color}\n                position={[1, 4, -2]}\n                rotation={[0, 180, 0]}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: RimLight --------------------\n\n\n    //#region -------------------- LIGHTS: ShadowLight --------------------\n\n    function ShadowLight() {\n        return (\n            <directionalLight\n                castShadow\n                position={[2.5, 0, 5]}\n                intensity={0.05}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                shadow-camera-near={0.1}\n                shadow-camera-far={50}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10}\n            />\n        );\n    }\n\n    //#endregion -------------------- LIGHTS: ShadowLight --------------------\n\n    //#endregion ==================== LIGHTS - REF: https://codeworkshop.dev/blog/2019-12-31-learn-the-basics-of-react-three-fiber-by-building-a-three-point-lighting-setup/ ====================\n\n\n    return (\n        <group>\n            <KeyLight brightness={10} color=\"#ccccff\" />\n            <FillLight brightness={10} color=\"#ffffff\" />\n            <RimLight brightness={10} color=\"#eeeeff\" />\n            <ShadowLight />\n        </group>\n    );\n};\n","//#region ==================== IMPORTS ====================\n\nimport React from \"react\";\nimport { useRef, useEffect } from \"react\";\n// import { useRef } from \"react\";\n\nimport { useThree } from \"react-three-fiber\";\n// import { extend } from \"react-three-fiber\";\n\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n// extend({ OrbitControls });\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CAMERA - REF: https://codeworkshop.dev/blog/2020-06-14-creating-a-skybox-with-reflections-in-react-three-fiber/ ====================\n\n// export default () => {\n\n//     // Get a reference to the Three.js Camera, and the canvas html element.\n//     // We need these to setup the OrbitControls class.\n//     // https://threejs.org/docs/#examples/en/controls/OrbitControls\n\n//     const {\n//         camera,\n//         gl: { domElement },\n//     } = useThree();\n\n//     // Ref to the controls, so that we can update them on every frame with useFrame\n//     const controlRef = useRef();\n\n//     // useFrame(() => controlRef.current.update(0.25));\n\n\n//     return (\n//         <>\n//             <orbitControls args={[camera, domElement]} autoRotate={true} enableZoom={false} ref={controlRef} />\n//         </>\n//     );\n// };\n\n//#endregion ==================== CAMERA - REF: https://codeworkshop.dev/blog/2020-06-14-creating-a-skybox-with-reflections-in-react-three-fiber/ ====================\n\n\n\n//#region ==================== CAMERA - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n\nfunction Camera01(props) {\n    const cameraRef = useRef();\n    const { setDefaultCamera } = useThree();\n\n    // Make the camera known to the system\n    useEffect(() => void setDefaultCamera(\n        cameraRef.current\n    // ), []);\n    ), [setDefaultCamera]);\n\n    // Update it every frame\n    // useFrame(() => cameraRef.current.updateMatrixWorld());\n\n\n    return (\n        <perspectiveCamera ref={cameraRef} {...props} />\n    )\n}\n\nexport default function Camera(props) {\n// export default (props) => {\n// export default () => {\n\n    // const cameraRef = useRef();\n    // const { setDefaultCamera } = useThree();\n\n    // // Make the camera known to the system\n    // useEffect(() => void setDefaultCamera(cameraRef.current), [setDefaultCamera]);\n\n    // // Update it every frame\n    // // useFrame(() => cameraRef.current.updateMatrixWorld());\n\n    // return (\n    //     <group>\n    //         <perspectiveCamera ref={cameraRef} {...props} />\n    //     </group>\n    // );\n\n\n    return (\n        <Camera01 position={[0, 0, 7.5]} fov={45} />\n    )\n}\n\n//#endregion ==================== CAMERA - REF: https://github.com/pmndrs/react-three-fiber/blob/master/recipes.md#using-your-own-camera-rig ====================\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { Suspense } from 'react';\n\nimport { Canvas } from \"react-three-fiber\";\nimport Scene from \"./components/Scene\";\nimport Lights from \"./components/Lights\";\nimport Camera from \"./components/Camera\"\n\nimport * as THREE from 'three'\n\n// import \"./styles.css\";\n\nexport default function Home() {\n\n    window.scene = new THREE.Scene();\n    window.THREE = THREE;\n\n    return (\n        <Canvas shadowMap>\n            <Suspense fallback={null}>\n                <Lights />\n                <Camera />\n                <Scene />\n            </Suspense>\n        </Canvas>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\n// import App from './App';\nimport Home from './Home';\n// import './index.css';\nimport './styles.css'\n\nReactDOM.render(\n    <Home />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}